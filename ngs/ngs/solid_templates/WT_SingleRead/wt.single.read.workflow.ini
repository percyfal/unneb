######################################################################################################
# Transcriptome mapping pipeline
# Requires 4 mandatory arguments
#   1. global.ini file name and location
#   2. read length
#   3. Name of input csfasta file
#   4. Name of input quality file
######################################################################################################
import $global_ini

# Input files
read.length = $read_length
mapping.tagfiles = $csfastafile
qual.file = $qualfile

#	plugin run statements
wt.spljunctionextractor.run = 1
wt.junction.mapping.run = 1
wt.filter.mapping.run = 1
wt.genomic.mapping.run = 1
wt.merge.run = 1
wt.sam2wig.run = 1
wt.counttag.run = 1
wt.exon.sequence.extractor.run = 1
wt.junction.finder.run = 1

#       Splice Junction Extractor
wt.splext.genegtf.file = $${exons.gtf.file}
wt.splext.reference.file = $${reference.file}

#     Filter Mapping Plugin
wt.filter.mapping.reference = $${filter.reference.file}

#      Genomic Mapping Plugin
wt.genomic.mapping.reference = $${reference.file}

#      Merge Plugin
wt.merge.reference.file = $${reference.file}
wt.merge.filter.reference.file = $${filter.reference.file}
wt.merge.junction.reference.file = $${junction.reference.file}
wt.merge.qual.file = $${qual.file}
wt.merge.tmpdir = $${tmp.dir}
wt.merge.output.dir = $${merge.output.directory}
wt.merge.output.bam.file = $${merge.output.bam.file}

#wt.merge.known.juntion.penalty = 0
#wt.merge.putative.junction.penalty = 1
#wt.merge.score.clear.zone = 5
#wt.merge.min.junction.overhang = 8
#wt.merge.num.alignments.to.store = 1

#      Sam2wig Plugin
wt.sam2wig.input.bam.file = $${merge.output.directory}/$${merge.output.bam.file}
wt.sam2wig.output.dir = $${output.dir}/sam2wig
wt.sam2wig.basefilename = coverage

#wt.sam2wig.alignment.score = 0
#wt.sam2wig.min.coverage = 10
#wt.sam2wig.wigperchromosome = true
#wt.sam2wig.alignment.filter.mode = primary
#wt.sam2wig.score.clear.zone = 5
#wt.sam2wig.min.mapq = 10

#	Count Tag Plugin
wt.counttag.exon.reference = $${exons.gtf.file}
wt.counttag.input.bam.file = $${merge.output.directory}/$${merge.output.bam.file}
wt.counttag.output.dir = $${output.dir}/counttag
wt.counttag.output.file.name = countagresult.txt

#wt.counttag.score.clear.zone = 5
#wt.counttag.alignment.filter.mode = primary
#wt.counttag.min.alignment.score = 0
#wt.counttag.min.mapq = 10

#	Junction Finder Plugins
# WARNING: Fusion caller is designed to work primarily with paired end datasets. 
# It is not suggested for use only the single read split evidence for calling 
# gene fusions. However, calling and quantifying already known junctions is 
# fine but fewer junctions will be found.

wt.genome.reference = $${reference.file}
wt.gtf.file = $${exons.gtf.file}
wt.f5.exseqext.output.reference = $${intermediate.dir}/exonsequenceextraction/exons_reference.fasta
wt.junction.finder.gtf.file = $${exons.gtf.file}
wt.junction.finder.input.exon.reference = $${wt.f5.exseqext.output.reference}
wt.junction.finder.input.bam = $${merge.output.directory}/$${merge.output.bam.file}
wt.junction.finder.output.dir = $${output.dir}/junction_finder

#wt.junction.finder.min.exon.length = 25
#wt.junction.finder.first.read.max.read.length = 50
#wt.junction.finder.second.read.max.read.length = 25
#wt.junction.finder.single.read = 1
#wt.junction.finder.single.read.min.mapq = 0
#wt.junction.finder.single.read.min.overlap = 10
#wt.junction.finder.single.read.max.mismatches = 2
#wt.junction.finder.single.read.clip.size = 2
#wt.junction.finder.single.read.clip.total = 10
#wt.junction.finder.single.read.ReportMultihit = 0 
#wt.junction.finder.single.read.remap = 0
#wt.junction.finder.single.read.clip.5.prime = 1
#wt.junction.finder.single.read.min.read.length = 37
#wt.junction.finder.paired.read = 0
#wt.junction.finder.paired.read.min.mapq = 10
#wt.junction.finder.paired.read.avg.insert.size = 120
#wt.junction.finder.paired.read.std.insert.size = 60
#wt.junction.finder.single.read.min.evidence.for.junction = 2
#wt.junction.finder.paired.read.min.evidence.for.junction = 0
#wt.junction.finder.combined.min.evidence.for.junction = 2
#wt.junction.finder.single.read.min.evidence.for.alt.splice = 2
#wt.junction.finder.paired.read.min.evidence.for.alt.splice = 0
#wt.junction.finder.combined.min.evidence.for.alt.splice = 2
#wt.junction.finder.single.read.min.evidence.for.fusion = 2
#wt.junction.finder.paired.read.min.evidence.for.fusion = 0
#wt.junction.finder.combined.evidence.for.fusion = 2
#wt.junction.finder.show.same.exon.pairs = 0
#wt.junction.finder.output.format = 3
